"use strict";!function(){angular.module("protrack",["ngAnimate","ngCookies","ngTouch","ngSanitize","firebase","ui.router","xeditable"]).config(["$stateProvider","$urlRouterProvider",function(t,a){a.otherwise("/timer"),t.state("timer",{url:"/timer",templateUrl:"partials/tracks.html",controller:"TracksCtrl as tracksCtrl"}).state("reports",{url:"/reports",templateUrl:"partials/reports.html",controller:"ReportsCtrl as reportsCtrl"}).state("projects",{url:"/projects",templateUrl:"partials/projects.html",controller:"ProjectsCtrl as projectsCtrl"}).state("settings",{url:"/settings",templateUrl:"partials/settings.html",controller:"SettingsCtrl as settingsCtrl"}).state("login",{url:"/login",templateUrl:"partials/login.html",controller:"AuthCtrl as authCtrl"}).state("register",{url:"/register",templateUrl:"partials/register.html",controller:"RegisterCtrl as regCtrl"})}]).value("FirebaseUrl",{url:"https://protrack3.firebaseio.com"})}(),angular.module("protrack").factory("Auth",["$firebaseAuth","FirebaseUrl",function(t,a){var e=new Firebase(a.url),r=t(e);return r}]),angular.module("protrack").controller("AuthCtrl",["Auth","$state","dataService",function(t,a,e){var r=this;r.authData=!1,r.message=null,r.auth=t,r.auth.$onAuth(function(t){t&&(r.authData=t,e.getData("users/"+t.uid+"/firstname").$loaded(function(t){r.firstname=t.$value}))}),r.login=function(){r.auth.$authWithPassword({email:r.email,password:r.password}).then(function(t){r.email="",r.password="",r.message="You are logged in as "+t.uid}).catch(function(t){r.error=t})},r.logout=function(){r.auth.$unauth(),r.authData=null,r.message=null},r.sendPwdReset=function(){r.email?t.$resetPassword({email:r.email},function(t){r.message=null===t?"Password reset e-mail was sent to: "+r.email:"Error sending password reset email:"+t}):r.message="Please provide your e-mail address."},r.removeUser=function(){r.message=null,r.error=null,t.$removeUser({email:r.email,password:r.password}).then(function(){r.message="User removed"}).catch(function(t){r.error=t})}}]),function(){angular.module("protrack").controller("RegisterCtrl",["Auth","dataService","$state",function(t,a,e){var r=this;r.register=function(){r.message=null,r.error=null,t.$createUser({email:r.email,password:r.password}).then(function(t){r.message="User created with uid: "+t.uid,a.setData("/users/"+t.uid,{firstname:r.firstName,lastname:r.lastName,email:r.email}),e.go("timer")}).catch(function(t){r.message="","EMAIL_TAKEN"===t.code&&(r.error="This e-mail address is already in use. Use the reset password function if necessary.")})}}])}(),function(){angular.module("protrack").factory("dataService",["$firebaseArray","$firebaseObject","FirebaseUrl",function(t,a,e){var r=e.url,s=new Firebase(r),n=function(){return r},o=function(){},l=function(){return s},i=function(t){return l().child(t)},c=function(e,r){var s=i(e);return r?(console.log("dataService get data as array from "+e),t(s)):(console.log("dataService get data as object from "+e),a(s))},d=function(t,a){console.log("dataService add data: "+t+" / "+a);var e=i(t);return e.set(a)},u=function(t,a){console.log("dataService add data: "+t+" / "+a);var e=i(t);return e.push(a)},m=function(t,a){console.log("dataService remove data: "+t+"/"+a);var e=new Firebase(r+"/"+t+"/"+a);e.remove()},p=function(t,a,e){console.log("dataService update data: "+t+"/"+a+" with "+e);var s=new Firebase(r+"/"+t+"/"+a);s.update(e)},f={getUrl:n,setUrl:o,setData:d,addData:u,getData:c,delData:m,updateData:p,getNodes:i};return f}])}(),function(){angular.module("protrack").controller("TracksCtrl",["dataService","$filter","Auth",function(t,a,e){var r=this,s=e.$getAuth(),n="users/"+s.uid+"/";r.tracksArray=t.getData(n+"tracks",!0),r.projectsArray=t.getData(n+"projects",!0),r.projects=t.getData(n+"projects",!1),r.tagsAll=t.getData(n+"tags",!1),r.tags=[],r.changeData=function(t){console.log("Data "+t)},r.createTrackElement=function(){$("#addtrack").prop("disabled",!0),r.newTrack={starttime:moment().format("DD.MM.YYYY HH:mm:ss"),project:"",desc:"",tags:"",endtime:"",record:!1},t.addData(n+"tracks",r.newTrack)},r.updateTrack=function(a,e){console.log("update track: "+e),t.updateData(n+"tracks",e,a),$("#addtrack").prop("disabled",!1)},r.showProject=function(t){var e=a("filter")(r.projectsArray,{$id:t});return t&&e.length?e[0].name:"Not set"},r.loadTags=function(t){var a=[];return""!==t&&0===r.tags.length&&angular.forEach(r.projects[t].tags,function(t){var e=r.tagsAll[t];void 0!==e&&(e.$id=t,a.push(e))}),a},r.showTags=function(t,a){var e=[];return angular.forEach(r.loadTags(t),function(t){angular.forEach(a,function(a){t.$id.indexOf(a)>=0&&void 0!==t.name&&e.push(t.name)})}),e.length?e.join(", "):"Not set"},r.deleteTrack=function(a){console.log("Delete Item: "+a),t.delData(n+"tracks",a),$("#addtrack").prop("disabled",!1)},r.writeID=function(t){console.log("Edit Item: "+t)}}])}(),function(){angular.module("protrack").controller("ProjectsCtrl",["dataService","Auth",function(t,a){var e=this,r=a.$getAuth(),s="users/"+r.uid+"/";e.projectsArray=t.getData(s+"projects",!0),e.tags=t.getData(s+"tags",!1),e.tagsArray=t.getData(s+"tags",!0),e.createProject=function(){$("#addproject").prop("disabled",!0),e.newProject={name:"",tags:""},t.addData(s+"projects",e.newProject)},e.createTag=function(){$("#addtag").prop("disabled",!0),e.newTag={name:"",desc:""},t.addData(s+"tags",e.newTag)},e.updateProject=function(a,e){console.log("update project: "+e),t.updateData(s+"projects",e,a),$("#addproject").prop("disabled",!1)},e.updateTag=function(a,e){console.log("update tag: "+e),t.updateData(s+"tags",e,a),$("#addtag").prop("disabled",!1)},e.showTags=function(t){var a=[];return angular.forEach(e.tagsArray,function(e){angular.forEach(t,function(t){e.$id.indexOf(t)>=0&&a.push(e.name)})}),a.length?a.join(", "):"Not set"},e.deleteItem=function(a,e){console.log("Delete "+a+": "+e),t.delData(s+a+"s",e),$("#add"+a).prop("disabled",!1)},e.writeID=function(t){console.log("Edit Item: "+t)}}])}(),function(){angular.module("protrack").controller("SettingsCtrl",["dataService",function(){}])}(),function(){angular.module("protrack").controller("ReportsCtrl",["dataService","Auth",function(t,a){var e=this,r=a.$getAuth(),s="users/"+r.uid+"/";e.tracksArray=t.getData(s+"tracks",!0)}])}(),function(t){try{t=angular.module("protrack")}catch(a){t=angular.module("protrack",[])}t.run(["$templateCache",function(t){t.put("partials/login.html",'<div class="container"><div class="row"><h1>Login</h1><div ng-show="authCtrl.message">{{authCtrl.message}}</div><form ng-hide="authCtrl.authData" ng-submit="authCtrl.login()" name="form"><div class="input-group"><span class="input-group-addon" id="sizing-addon1">@</span> <label for="email" class="sr-only">E-Mail</label> <input name="email" id="email" ng-model="authCtrl.email" type="text" class="form-control" placeholder="E-Mail" aria-describedby="sizing-addon1"></div><div class="input-group"><span class="input-group-addon" id="sizing-addon1">&#128274;</span> <label for="password" class="sr-only">Password</label> <input name="password" id="password" ng-model="authCtrl.password" type="password" class="form-control" placeholder="Password" aria-describedby="sizing-addon1"></div><div class="form-actions"><button type="submit" class="btn btn-primary">Login</button> <button type="button" ng-click="authCtrl.sendPwdReset()" class="btn btn-info">Reset Password</button> <a ng-href="#/register">Register</a></div></form><hr><div ng-hide="authCtrl.authData" class="button-group"><button ng-click="authCtrl.login()" class="btn btn-social btn-google btn-adn"><i class="fa fa-facebook"></i> Login With Google</button> <button ng-click="authCtrl.login()" class="btn btn-social btn-github btn-adn"><i class="fa fa-github"></i> Login With Github</button></div><div ng-show="authCtrl.authData"><p>Hello {{ authCtrl.firstname }}</p><button ng-click="authCtrl.logout()" class="btn">Logout</button></div></div></div>')}])}(),function(t){try{t=angular.module("protrack")}catch(a){t=angular.module("protrack",[])}t.run(["$templateCache",function(t){t.put("partials/projects.html",'<div class="container"><div class="twocolums"><div class="columnone"><table class="table table-bordered table-hover table-condensed"><thead><tr style="font-weight: bold"><td style="width:30%">Projekt</td><td style="width:70%">Tags</td><td><button id="addproject" class="btn btn-default btn-xs" ng-click="projectsCtrl.createProject()"><i class="fa fa-plus-square-o fa-lg"></i></button></td></tr></thead><tbody><tr ng-repeat="(key,project) in projectsCtrl.projectsArray | orderBy:\'name\':false"><td><span editable-text="project.name" e-name="name" e-class="form-control input-sm" e-form="rowform" e-required="">{{ project.name || \'empty\' }}</span></td><td><span editable-select="project.tags" e-name="tags" e-multiple="" e-class="form-control input-sm" e-form="rowform" e-ng-options="t.$id as t.name for t in projectsCtrl.tagsArray">{{ projectsCtrl.showTags(project.tags) }}</span></td><td style="white-space: nowrap"><form editable-form="" name="rowform" onaftersave="projectsCtrl.updateProject($data, project.$id)" ng-show="rowform.$visible" class="form-buttons form-inline" shown="projectsCtrl.newProject.name == project.name"><button type="submit" ng-disabled="rowform.$waiting" class="btn btn-default btn-xs"><i class="fa fa-save fa-lg"></i></button> <button type="button" ng-disabled="rowform.$waiting" ng-click="rowform.$cancel()" class="btn btn-default btn-xs"><i class="fa fa-times fa-lg"></i></button></form><div class="buttons" ng-show="!rowform.$visible"><button ng-hide="confirm" class="btn btn-default btn-xs" type="button" ng-click="rowform.$show()"><span class="fa fa-edit" aria-hidden="true"></span></button> <button ng-hide="confirm" class="btn btn-default btn-xs" type="button" ng-click="confirm=true"><span class="fa fa-trash" aria-hidden="true"></span></button><div ng-show="confirm"><button class="btn btn-danger btn-xs" title="Projekt wirklich lÃ¶schen?" ng-click="projectsCtrl.deleteItem(\'project\', project.$id)"><span class="fa fa-trash" aria-hidden="true"></span>?</button> <button class="btn btn-default btn-xs" title="Abbrechen" ng-click="confirm=false"><span class="fa fa-times fa-lg" aria-hidden="true"></span></button></div></div></td></tr></tbody></table></div><div class="columntwo"><table class="table table-bordered table-hover table-condensed"><thead><tr style="font-weight: bold"><td style="width:30%">Tag</td><td style="width:70%">Beschreibung</td><td><button id="addtag" class="btn btn-default btn-xs" ng-click="projectsCtrl.createTag()"><i class="fa fa-plus-square-o fa-lg"></i></button></td></tr></thead><tbody><tr ng-repeat="(key,tag) in projectsCtrl.tagsArray | orderBy:\'name\':false"><td><span editable-text="tag.name" e-name="name" e-class="form-control input-sm" e-form="rowform" e-required="">{{ tag.name || \'empty\' }}</span></td><td><span editable-text="tag.desc" e-name="desc" e-class="form-control input-sm" e-form="rowform" e-required="">{{ tag.desc || \'empty\' }}</span></td><td style="white-space: nowrap"><form editable-form="" name="rowform" onaftersave="projectsCtrl.updateTag($data, tag.$id)" ng-show="rowform.$visible" class="form-buttons form-inline" shown="projectsCtrl.newTag.name == tag.name"><button type="submit" ng-disabled="rowform.$waiting" class="btn btn-default btn-xs"><i class="fa fa-save fa-lg"></i></button> <button type="button" ng-disabled="rowform.$waiting" ng-click="rowform.$cancel()" class="btn btn-default btn-xs"><i class="fa fa-times fa-lg"></i></button></form><div class="buttons" ng-show="!rowform.$visible"><button ng-hide="confirm" class="btn btn-default btn-xs" type="button" ng-click="rowform.$show()"><span class="fa fa-edit" aria-hidden="true"></span></button> <button ng-hide="confirm" class="btn btn-default btn-xs" type="button" ng-click="confirm=true"><span class="fa fa-trash" aria-hidden="true"></span></button><div ng-show="confirm"><button class="btn btn-danger btn-xs" title="Tag wirklich lÃ¶schen?" ng-click="projectsCtrl.deleteItem(\'tag\', tag.$id)"><span class="fa fa-trash" aria-hidden="true"></span>?</button> <button class="btn btn-default btn-xs" title="Abbrechen" ng-click="confirm=false"><span class="fa fa-times fa-lg" aria-hidden="true"></span></button></div></div></td></tr></tbody></table></div></div></div>')}])}(),function(t){try{t=angular.module("protrack")}catch(a){t=angular.module("protrack",[])}t.run(["$templateCache",function(t){t.put("partials/register.html",'<div class="container"><div class="row"><h1>Register</h1><div>{{regCtrl.message}}</div><div>{{regCtrl.error}}</div><form name="form" ng-submit="regCtrl.register()" role="form"><div class="form-group" ng-class="{ \'has-error\': form.firstName.$dirty && form.firstName.$error.required }"><label for="firstName" class="sr-only">First name</label> <input type="text" name="firstName" id="firstName" class="form-control" ng-model="regCtrl.firstName" placeholder="First name" required=""></div><div class="form-group" ng-class="{ \'has-error\': form.lastName.$dirty && form.lastName.$error.required }"><label for="lastName" class="sr-only">Last name</label> <input type="text" name="lastName" id="lastName" class="form-control" ng-model="regCtrl.lastName" placeholder="Last name" required=""></div><div class="input-group" ng-class="{ \'has-error\': form.email.$dirty && form.email.$error.required }"><span class="input-group-addon" id="sizing-addon1">@</span> <label for="email" class="sr-only">E-Mail</label> <input type="text" name="email" id="email" class="form-control" ng-model="regCtrl.email" placeholder="E-Mail" required=""></div><div class="input-group" ng-class="{ \'has-error\': form.password.$dirty && form.password.$error.required }"><span class="input-group-addon" id="sizing-addon1">&#128274;</span> <label for="password" class="sr-only">Password</label> <input type="password" name="password" id="password" class="form-control" ng-model="regCtrl.password" placeholder="Password" required=""></div><div class="form-actions"><button type="submit" class="btn btn-primary">Register</button> <a href="#/login" class="btn btn-link">Cancel</a></div></form></div></div>')}])}(),function(t){try{t=angular.module("protrack")}catch(a){t=angular.module("protrack",[])}t.run(["$templateCache",function(t){t.put("partials/reports.html",'<div class="container"><div><button>Tags</button><button>Search</button><button>Month</button></div><table class="table table-bordered table-hover table-condensed"><thead><tr style="font-weight: bold"><td style="width:15%">Startzeit</td><td style="width:20%">Projekt</td><td style="width:10%">Tags</td><td style="width:25%">Beschreibung</td><td style="width:6%">Endzeit</td></tr></thead><tbody><tr ng-repeat="(key,track) in reportsCtrl.tracksArray | orderBy:\'project\':false"><td>{{ track.starttime }}</td><td>{{ track.project }}</td><td>{{ track.tags }}</td><td>{{ track.desc }}</td><td>{{ track.endtime }}</td></tr></tbody></table></div>')}])}(),function(t){try{t=angular.module("protrack")}catch(a){t=angular.module("protrack",[])}t.run(["$templateCache",function(t){t.put("partials/settings.html",'<div class="container"><p>Settings</p></div>')}])}(),function(t){try{t=angular.module("protrack")}catch(a){t=angular.module("protrack",[])}t.run(["$templateCache",function(t){t.put("partials/tracks.html",'<div class="container"><div class="row"><table class="table table-bordered table-hover table-condensed"><thead><tr style="font-weight: bold"><td style="width:15%">Startzeit</td><td style="width:20%">Projekt</td><td style="width:10%">Tags</td><td style="width:25%">Beschreibung</td><td style="width:6%">Endzeit</td><td><button id="addtrack" class="btn btn-default btn-xs" ng-click="tracksCtrl.createTrackElement()"><i class="fa fa-plus-square-o fa-lg"></i></button></td></tr></thead><tbody><tr ng-repeat="(key,track) in tracksCtrl.tracksArray | orderBy:\'date\':true"><td><span editable-datetime="track.starttime" e-name="starttime" e-class="form-control input-sm" e-form="rowform">{{ track.starttime || \'empty\' }}</span></td><td><span editable-select="track.project" e-name="project" e-form="rowform" e-class="form-control input-sm" e-ng-options="p.$id as p.name for p in tracksCtrl.projectsArray">{{ tracksCtrl.showProject(track.project) }}</span></td><td><span editable-select="track.tags" e-name="tags" e-form="rowform" e-multiple="" e-class="form-control input-sm" e-ng-focus="" e-ng-options="t.$id as t.name for t in tracksCtrl.loadTags(track.project)">{{ tracksCtrl.showTags(track.project, track.tags) }}</span></td><td><span editable-text="track.desc" e-name="desc" e-class="form-control input-sm" e-form="rowform">{{ track.desc || \'empty\' }}</span></td><td><span editable-datetime="track.endtime" e-name="endtime" e-class="form-control input-sm" e-form="rowform">{{ track.endtime || \'empty\' }}</span></td><td style="white-space: nowrap"><form editable-form="" name="rowform" onaftersave="tracksCtrl.updateTrack($data, track.$id)" ng-show="rowform.$visible" class="form-buttons form-inline" shown="tracksCtrl.newTrack.starttime == track.starttime"><button type="submit" ng-disabled="rowform.$waiting" class="btn btn-default btn-xs"><i class="fa fa-save fa-lg"></i></button> <button type="button" ng-disabled="rowform.$waiting" ng-click="rowform.$cancel()" class="btn btn-default btn-xs"><i class="fa fa-times fa-lg"></i></button></form><div class="buttons" ng-show="!rowform.$visible"><button ng-hide="confirm" class="btn btn-default btn-xs" type="button" ng-click="rowform.$show()"><span class="fa fa-edit" aria-hidden="true"></span></button> <button ng-hide="confirm" class="btn btn-default btn-xs" type="button" ng-click="confirm=true"><span class="fa fa-trash" aria-hidden="true"></span></button><div ng-show="confirm"><button class="btn btn-danger btn-xs" title="Track wirklich lÃ¶schen?" ng-click="tracksCtrl.deleteTrack(track.$id)"><span class="fa fa-trash" aria-hidden="true"></span>?</button> <button class="btn btn-default btn-xs" title="Abbrechen" ng-click="confirm=false"><span class="fa fa-times fa-lg" aria-hidden="true"></span></button></div></div></td></tr></tbody></table></div><hr><div class="footer"><p>copyright protrack from protrack</p></div></div>')}])}();